# ===============================================
# 공통 설정 (모든 환경에서 사용)
# ===============================================
server:
  port: 8888
  servlet:
    encoding:
      charset: UTF-8
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  # 프로필 설정
  profiles:
    active: dev
    
  # 파일 업로드 설정
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB        # 단일 파일 최대 크기
      max-request-size: 50MB     # 전체 요청 최대 크기
      file-size-threshold: 2KB   # 메모리에서 디스크로 전환되는 임계값
      resolve-lazily: false      # 파일 업로드 즉시 처리
      
  # H2 데이터베이스 웹 콘솔 설정
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false
        trace: false
        
  # JPA 및 Hibernate 설정
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        connection:
          provider_disables_autocommit: true
        query:
          in_clause_parameter_padding: true
          fail_on_pagination_over_collection_fetch: true
          plan_cache_max_size: 4096
          
  # Jackson 설정 (JSON 처리)
  jackson:
    serialization:
      fail-on-empty-beans: false
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    property-naming-strategy: SNAKE_CASE
    
  # 웹 설정
  web:
    resources:
      static-locations: classpath:/static/
      cache:
        period: 86400  # 1일 캐시
        cachecontrol:
          max-age: 86400
          must-revalidate: true
          
  # 보안 설정
  security:
    user:
      name: admin
      password: admin1234  # 실제 운영에서는 환경변수로 관리
      roles: ADMIN

# ===============================================
# 커스텀 애플리케이션 설정
# ===============================================
app:
  # 파일 업로드 설정
  file:
    upload-dir: src/main/resources/static/images
    max-size: 10485760  # 10MB in bytes
    allowed-types:
      - image/jpeg
      - image/png
      - image/webp
    thumbnail:
      enabled: true
      sizes:
        small: 200x200
        medium: 800x600
        large: 1600x1200
        
  # 보안 설정
  security:
    jwt:
      secret: mySecretKey123456789012345678901234567890  # 실제 운영에서는 환경변수로 관리
      expiration: 86400000  # 24시간
    cors:
      allowed-origins: 
        - http://localhost:3000
        - http://localhost:8080
        - http://localhost:8888
      allowed-methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      
  # 포트폴리오 설정
  portfolio:
    cache:
      enabled: true
      ttl: 3600  # 1시간
    image:
      placeholder: /images/default-profile.png
      quality: 85
      
# ===============================================
# 로깅 설정
# ===============================================
logging:
  level:
    com.example.demo: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/portfolio.log
    max-size: 10MB
    max-history: 30

# ===============================================
# 모니터링 설정
# ===============================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

---

# ===============================================
# 개발 환경 (local, dev)
# ===============================================
spring:
  config:
    activate:
      on-profile: "dev"
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 600000
      max-lifetime: 1800000
      
  # 개발환경 전용 설정
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
    livereload:
      enabled: true
    remote:
      secret: mysecret
      
  # H2 Console 접근 허용
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true

# 개발환경 로깅
logging:
  level:
    root: INFO
    com.example.demo: DEBUG
    org.springframework.web: DEBUG

---

# ===============================================
# 테스트 환경
# ===============================================
spring:
  config:
    activate:
      on-profile: "test"
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;MODE=MySQL
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    
# 테스트환경 로깅
logging:
  level:
    root: WARN
    com.example.demo: INFO

---

# ===============================================
# 운영 환경 (production, prod)
# ===============================================
spring:
  config:
    activate:
      on-profile: "prod"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # TODO: 환경변수로 관리하거나 AWS Parameter Store/Secrets Manager 사용
    url: ${DB_URL:jdbc:mysql://localhost:3306/portfolio?useSSL=true&serverTimezone=Asia/Seoul}
    username: ${DB_USERNAME:portfolio_user}
    password: ${DB_PASSWORD:change_this_password}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      
  # 운영환경 JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate  # 운영에서는 validate 사용
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        
  # H2 Console 비활성화
  h2:
    console:
      enabled: false
      
  # 정적 리소스 캐싱 강화
  web:
    resources:
      cache:
        period: 604800  # 7일
        cachecontrol:
          max-age: 604800
          must-revalidate: false

# 운영환경 보안 설정
app:
  security:
    jwt:
      secret: ${JWT_SECRET:please_change_this_secret_key_in_production}
    cors:
      allowed-origins:
        - ${ALLOWED_ORIGIN_1:https://yourdomain.com}
        - ${ALLOWED_ORIGIN_2:https://www.yourdomain.com}

# 운영환경 로깅
logging:
  level:
    root: WARN
    com.example.demo: INFO
    org.hibernate.SQL: WARN
  file:
    name: /var/log/portfolio/application.log